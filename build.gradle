
allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'

    repositories {
        maven { url 'http://127.0.0.1:8081/nexus/content/groups/public' }
        jcenter()
    }

    idea {
        project {
            jdkName = '1.8'
            languageLevel = '1.8'
        }
    }
}

jar {
    baseName = 'myproject'
    version = '0.0.1-SNAPSHOT'
}

buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    
    repositories {
        maven { url 'http://127.0.0.1:8081/nexus/content/groups/public' }
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'spring-boot'

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.RELEASE'
    }
}

dependencies {
    compile(
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-aop',
            'org.springframework.boot:spring-boot-starter-actuator',

            'com.google.guava:guava:18.0'
    )


    testCompile(
            'junit:junit:4.11',
            'org.springframework.boot:spring-boot-starter-test'
    )
}

idea.project.ipr {
    withXml { provider ->
        provider.node.component
                .find { it.@name == 'VcsDirectoryMappings' }
                .mapping.@vcs = 'Git'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}


task bootDebug(dependsOn: bootRun) {
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(bootDebug)) {
        applicationDefaultJvmArgs << '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'
    }
}
